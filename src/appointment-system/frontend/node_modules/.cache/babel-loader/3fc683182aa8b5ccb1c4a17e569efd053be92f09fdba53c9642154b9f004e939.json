{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrish\\\\OneDrive\\\\Documents\\\\General Appointment System - FC\\\\src\\\\appointment-system\\\\frontend\\\\src\\\\components\\\\ui\\\\calendar.jsx\";\nimport React from 'react';\n\n// Simple utility function for classnames\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction cn(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\nexport function Calendar({\n  mode = 'single',\n  selected,\n  onSelect,\n  className = '',\n  ...props\n}) {\n  const today = new Date();\n  const currentMonth = today.getMonth();\n  const currentYear = today.getFullYear();\n\n  // Generate days for current month\n  const getDaysInMonth = (month, year) => {\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDayOfWeek = firstDay.getDay();\n    const days = [];\n\n    // Add empty cells for days before month starts\n    for (let i = 0; i < startingDayOfWeek; i++) {\n      days.push(null);\n    }\n\n    // Add days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(new Date(year, month, day));\n    }\n    return days;\n  };\n  const days = getDaysInMonth(currentMonth, currentYear);\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const isSelected = date => {\n    if (!selected || !date) return false;\n    return date.toDateString() === selected.toDateString();\n  };\n  const isToday = date => {\n    if (!date) return false;\n    return date.toDateString() === today.toDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn('p-3 bg-white border rounded-lg', className),\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium\",\n        children: [monthNames[currentMonth], \" \", currentYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1 mb-2\",\n      children: dayNames.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs font-medium text-gray-500 text-center p-2\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1\",\n      children: days.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aspect-square\",\n        children: date ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => onSelect && onSelect(date),\n          className: cn('w-full h-full flex items-center justify-center text-sm rounded transition-colors', 'hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-blue-500', isSelected(date) && 'bg-blue-600 text-white hover:bg-blue-700', isToday(date) && !isSelected(date) && 'bg-blue-100 text-blue-600'),\n          children: date.getDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","cn","classes","filter","Boolean","join","Calendar","mode","selected","onSelect","className","props","today","Date","currentMonth","getMonth","currentYear","getFullYear","getDaysInMonth","month","year","firstDay","lastDay","daysInMonth","getDate","startingDayOfWeek","getDay","days","i","push","day","monthNames","dayNames","isSelected","date","toDateString","isToday","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hrish/OneDrive/Documents/General Appointment System - FC/src/appointment-system/frontend/src/components/ui/calendar.jsx"],"sourcesContent":["import React from 'react';\n\n// Simple utility function for classnames\nfunction cn(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport function Calendar({ \n  mode = 'single', \n  selected, \n  onSelect, \n  className = '',\n  ...props \n}) {\n  const today = new Date();\n  const currentMonth = today.getMonth();\n  const currentYear = today.getFullYear();\n  \n  // Generate days for current month\n  const getDaysInMonth = (month, year) => {\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDayOfWeek = firstDay.getDay();\n    \n    const days = [];\n    \n    // Add empty cells for days before month starts\n    for (let i = 0; i < startingDayOfWeek; i++) {\n      days.push(null);\n    }\n    \n    // Add days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(new Date(year, month, day));\n    }\n    \n    return days;\n  };\n\n  const days = getDaysInMonth(currentMonth, currentYear);\n  const monthNames = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const isSelected = (date) => {\n    if (!selected || !date) return false;\n    return date.toDateString() === selected.toDateString();\n  };\n\n  const isToday = (date) => {\n    if (!date) return false;\n    return date.toDateString() === today.toDateString();\n  };\n\n  return (\n    <div className={cn('p-3 bg-white border rounded-lg', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-sm font-medium\">\n          {monthNames[currentMonth]} {currentYear}\n        </h3>\n      </div>\n\n      {/* Day headers */}\n      <div className=\"grid grid-cols-7 gap-1 mb-2\">\n        {dayNames.map(day => (\n          <div key={day} className=\"text-xs font-medium text-gray-500 text-center p-2\">\n            {day}\n          </div>\n        ))}\n      </div>\n\n      {/* Calendar grid */}\n      <div className=\"grid grid-cols-7 gap-1\">\n        {days.map((date, index) => (\n          <div key={index} className=\"aspect-square\">\n            {date ? (\n              <button\n                type=\"button\"\n                onClick={() => onSelect && onSelect(date)}\n                className={cn(\n                  'w-full h-full flex items-center justify-center text-sm rounded transition-colors',\n                  'hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-blue-500',\n                  isSelected(date) && 'bg-blue-600 text-white hover:bg-blue-700',\n                  isToday(date) && !isSelected(date) && 'bg-blue-100 text-blue-600'\n                )}\n              >\n                {date.getDate()}\n              </button>\n            ) : (\n              <div />\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}